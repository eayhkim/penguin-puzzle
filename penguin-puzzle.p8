pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

function _init()
	-- setting map transparency
	palt(0, false)
	palt(15, true)

	-- set flag 1 on sprite 62 (light blue water)
	fset(62, 1, true)  


	p = {
		x = 50,
		y = 50, 
		sprite = 1,
		speed = 2
	}

	npcs = {}
	npc_count = 10
	npc_names = {"joe", "bob", "mary", "jane"}
	npc_colors = {3, 4, 5, 6, 7, 8, 9, 10}
	npc_index = 1
	for i = 1, npc_count do
		create_npc(i, rnd(npc_colors), rnd(npc_names), 16 + rnd(80), 35 + 4 * i)
	end

	-- give sharks starting target to swim to
	sharks = {
		{
			x = 7, y = 100, 
			target_x = 7, target_y = 100, 
			speed = 0.4, 
			sprite = 17, flip = false
		},
		{
			x = 118, y = 45, 
			target_x = 118, target_y = 45, 
			speed = 0.2, 
			sprite = 17, flip = false
		}
	}

	_upd = u_walking_around
	_drw = d_walking_around
	offset = 0
end

function _update()
	_upd()
end


function _draw()
	_drw()
end


-->8
-- states --


function u_walking_around()
	p_move()
	npcs_move()
	sharks_move()

	if btnp(❎) then
		npcs[npc_index].is_unlocked = true
		npc_index += 1
		trigger_shake()
		
	end
end


function ready_to_shake()
	for i = 1, npc_count do 
		if not npcs[i].is_unlocked then 
			return false 
		end
	end 
	return true 
end


function trigger_shake()
	if ready_to_shake() then 
		offset = 1
		_upd = u_tip_iceberg
	end
end


function u_tip_iceberg()
	screen_shake()
end

function u_end_game()
	cls()
end





-->8
-- movement functions --
function on_iceberg(new_x, new_y, flag)
	local tile_x = new_x / 8
	local tile_y = new_y / 8
  return fget(mget(tile_x,tile_y), flag)
end


function shark_fully_in_water(x, y)
	-- can adjust padding, but for now 0 seems best?
	local padding = 0 

    return on_water(x + padding, y + padding) and
           on_water(x + 7 - padding, y + padding) and
           on_water(x + padding, y + 7 - padding) and
           on_water(x + 7 - padding, y + 7 - padding)
end


function on_water(new_x, new_y)
	local tile_x = new_x / 8
	local tile_y = new_y / 8

	-- flag 1 means water (light blue pixels)
    return fget(mget(tile_x, tile_y), 1) 
end


function random_water_position()
	-- get new target for sharks 
    local new_x, new_y
    repeat
        new_x = flr(rnd(128))
        new_y = flr(rnd(128))
    until on_water(new_x, new_y)
    return new_x, new_y
end



function p_move()
	if btn() != 0 then
		new_x = p.x
		new_y = p.y
		if btn(⬅️) then
			new_x = p.x - 1
		end
		if btn(➡️) then
			new_x = p.x + 1
		end
		if btn(⬆️) then
			new_y = p.y -1
		end
		if btn(⬇️) then
			new_y = p.y + 1
		end
		if on_iceberg(new_x + 4, new_y + 4, 0) then
			-- only update p position if on iceberg
			p.x = new_x
			p.y = new_y
		else 
			print("not on iceberg")
		end
	else
		print("no input")
	end
end


function npcs_move()
	for i = 1, npc_count do
		if npcs[i].is_unlocked then 
			if npcs[i].x < npcs[i].target_x then 
				npcs[i].x += npcs[i].dx
			end	
			if npcs[i].x > npcs[i].target_x then 
				npcs[i].x -= npcs[i].dx
			end	
			if npcs[i].y < npcs[i].target_y then 
				npcs[i].y += npcs[i].dy
			end	
			if npcs[i].y > npcs[i].target_y then 
				npcs[i].y -= npcs[i].dy
			end	
		end
	end
end


function sharks_move()
    for shark in all(sharks) do
		-- get distance to target, swim there, then pick new one
        local dx = shark.target_x - shark.x
        local dy = shark.target_y - shark.y
        local dist = sqrt(dx * dx + dy * dy)

        if dist < 1 then
            shark.target_x, shark.target_y = random_water_position()
        else
            local vx = (dx / dist) * shark.speed
            local vy = (dy / dist) * shark.speed

            local new_x = shark.x + vx
            local new_y = shark.y + vy

            -- check full shark sprite inside water
            if shark_fully_in_water(new_x, new_y) then
                shark.x = new_x
                shark.y = new_y

                -- flip sprite if changing direction
                shark.flip = vx > 0
            else
                shark.target_x, shark.target_y = random_water_position()
            end
        end
    end
end


-->8
-- drawing functions --

function d_walking_around()
	cls()
	map()
	draw_penguins()
    draw_sharks()
end

function d_end_game()
	cls()
	print("you tipped the iceberg")
end


function draw_penguins()
-- layers sprite drawing based on y position
p_drawn = false
	for i = 1, npc_count do
		if npcs[i].y > p.y and not p_drawn then
				spr(p.sprite, p.x, p.y)
				p_drawn = true
		end
		spr(npcs[i].sprite, npcs[i].x, npcs[i].y)
	end
	if not p_drawn then
		spr(p.sprite, p.x, p.y)
	end
end


function draw_sharks()
    for shark in all(sharks) do
        spr(shark.sprite, shark.x, shark.y, 1, 1, shark.flip, false)
    end
end


function screen_shake()
	local grow = 1.05
	local offset_x = 4 - rnd(8)
	local offset_y = 4 - rnd(8)
	
	offset_x *= offset
	offset_y *= offset
	
	camera(offset_x,offset_y)
	
	offset *= grow
	
	if offset >= 20 then
		_upd = u_end_game
		_drw = d_end_game
	end
end


-->8
-- init functions --

function create_npc(id,sprite,name,x,y)
	local npc = {
		id = id,
		sprite = sprite,
		name = name,
		x = x,
		y = y,
		dx = 1,
		dy = 1,
		target_x = 25, 
		target_y = 50,
		is_unlocked = false
	}

	add(npcs, npc)
end

__gfx__
00000000ffddddfffffeefffffeeeeffff3333ffffbbbbffff1111ffffccccffffaaaaffff5555ffff4444ff6611111111116666111111110000000000000000
00000000fd777dffffeeeefffe777efff37773fffb777bfff17771fffc777cfffa777afff57775fff47774ff6661111111666666111111110000000000000000
00700700fd070ddffe1e1eeffe070eeff307033ffb070bbff107011ffc070ccffa070aaff507055ff407044f6666666166666666166666110000000000000000
00077000f999dddffee9eeeff999eeeff999333ff999bbbff999111ff999cccff999aaaff999555ff999444f6666666666666666566666610000000000000000
00077000dd777dddee7777eeee777eee33777333bb777bbb11777111cc777cccaa777aaa55777555447774446666666666666666155555110000000000000000
00700700d77777ddee7777eee77777ee37777733b77777bb17777711c77777cca77777aa57777755477777446666666656666666111166610000000000000000
00000000fd7777dffee77eeffe7777eff377773ffb7777bff177771ffc7777cffa7777aff577775ff477774f6666665515566666111566660000000000000000
00000000f99f99ffff99f99ff99f99fff99f99fff99f99fff99f99fff99f99fff99f99fff99f99fff99f99ff5555555115555555111155510000000000000000
00000000ffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017777777cccccccc76667766
00000000ffff11ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777cc7776cc67777676
00000000fff161ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777c6666ccc77777776
00000000fff661ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777cccccccc77677777
00000000ff16d11f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777776ccccc77c77777777
00000000ff6d111f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777766cc77766c77777777
00000000f1d11111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066666666c66666cc77777777
00000000cc1111cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066666666cccccccc77777777
00000000cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111cccccccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111177c677cccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011117777c6666ccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011777777cccccccc76777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017777777cc777ccc77777767
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017777777c666677c67776777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777666cccc666c76767676
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066666666cccccccc66666666
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007777777711111111cccccccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007776676711111111cccccccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006766766611111111cccccccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006676766611111111cccccccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006666667611111111cccccccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006666656611111111cccccccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005656666611111111cccccccc77777777
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005555555511111111cccccccc77777777
__gff__
0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
3d3d3d3d3d0d3d3d3d3d3d3d3d3d3d3d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d0c0b3d3d3d3d3d3d0d3d3d3d3d3d3d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d3d3d3d3d3d3d3d3d3d3d0c0b3d3d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d3d3d1f3f1f3d3d3d3d3d3d3d3d3d3d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d3d1f3f3f3f3f3f1f3d3d3d3d3d2d1d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3e1f3f3f3f3f3f3f3f3f3f1f3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e1f3f3f3f3f3f3f3f3f3f3f3f1f3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3f3f3f3f3f3f3f3f3f3f3f3f3f1f3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3c3f3f3f3f3f3f3f3f3f3f3f3f3f3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e2e2f3f3f3f3f3f3f3f3f3f3f3f2f1e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3e3c2f2f3f3f3f3f3f3f2f2f2f3c3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3e3e3c3c2f2f2f2f2f2f3c3c3c1e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3e2e3e2e3c3c3c3c3c3c3e1e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
